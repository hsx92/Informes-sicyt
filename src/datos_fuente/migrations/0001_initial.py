# Generated by Django 5.2.3 on 2025-06-11 16:02

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EquipamientoSSNN',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('unidad_territorial', models.CharField(max_length=100)),
                ('sistema_nacional', models.CharField(db_column='Sistema Nacional', max_length=255)),
                ('cant_equipos', models.IntegerField()),
                ('nivel_agregacion', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Equipamiento SSNN',
                'verbose_name_plural': 'Equipamientos SSNN',
                'db_table': 'equipos_ssnn_provincia_region_pais',
            },
        ),
        migrations.CreateModel(
            name='ExportacionNivelTecnologico',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('anio', models.IntegerField()),
                ('nivel_agregacion', models.CharField(max_length=50)),
                ('unidad_territorial', models.CharField(max_length=100)),
                ('enfoque_industria', models.CharField(db_column='ITEnfoqueindustria', max_length=100)),
                ('fob_millones_uss', models.DecimalField(decimal_places=2, max_digits=20)),
            ],
            options={
                'verbose_name': 'Exportación por Nivel Tecnológico',
                'verbose_name_plural': 'Exportaciones por Nivel Tecnológico',
                'db_table': 'expo_nivel_tecnologico_provincia_region_pais',
            },
        ),
        migrations.CreateModel(
            name='ExportacionTecnologicaDestino',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('anio', models.IntegerField(db_column='ANIO')),
                ('cod_prov', models.IntegerField(db_column='ccod_prov')),
                ('intensidad_tecnologica', models.CharField(db_column='it_gral', max_length=100)),
                ('pais_destino', models.CharField(db_column='PAIS', max_length=100)),
                ('fob_millones_sum', models.DecimalField(db_column='FOB_MILL_sum', decimal_places=2, max_digits=20)),
            ],
            options={
                'verbose_name': 'Exportación Tecnológica por Destino',
                'verbose_name_plural': 'Exportaciones Tecnológicas por Destino',
                'db_table': 'expo_tecno_destino',
            },
        ),
        migrations.CreateModel(
            name='ExportacionTop5',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('region_cofecyt', models.CharField(db_column='Region COFECYT', max_length=100)),
                ('provincia', models.CharField(db_column='Provincia', max_length=100)),
                ('gran_rubro', models.CharField(db_column='Gran Rubro', max_length=255)),
                ('y2021', models.DecimalField(blank=True, db_column='2021', decimal_places=2, max_digits=20, null=True)),
                ('y2022', models.DecimalField(blank=True, db_column='2022', decimal_places=2, max_digits=20, null=True)),
                ('y2023', models.DecimalField(blank=True, db_column='2023', decimal_places=2, max_digits=20, null=True)),
                ('y2024', models.DecimalField(blank=True, db_column='2024', decimal_places=2, max_digits=20, null=True)),
            ],
            options={
                'verbose_name': 'Top 5 Productos Exportados por Provincia',
                'verbose_name_plural': 'Top 5 Productos Exportados por Provincia',
                'db_table': 'expo_por_provincia_top5',
            },
        ),
        migrations.CreateModel(
            name='IndicadoresContexto',
            fields=[
                ('id', models.IntegerField(help_text='Identificador único de la provincia', primary_key=True, serialize=False)),
                ('provincia', models.CharField(help_text='Nombre oficial completo de la provincia', max_length=100)),
                ('poblacion_censo_2022', models.IntegerField(blank=True, null=True)),
                ('superficie', models.FloatField(blank=True, null=True)),
                ('vab_cepal_2022', models.BigIntegerField(blank=True, help_text='Valor Agregado Bruto provincial del año 2022', null=True)),
                ('tasas_actividad_eph_3trim_2024', models.FloatField(blank=True, null=True)),
                ('tasa_empleo_3trim_2024', models.FloatField(blank=True, null=True)),
                ('tasa_desocupacion_eph_3trim_2024', models.FloatField(blank=True, null=True)),
                ('cant_empresas_sipa_2022', models.IntegerField(blank=True, null=True)),
                ('trabajo_registrado_sipa_2024', models.IntegerField(blank=True, null=True)),
                ('exportaciones_millones_uss_opex_2023', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('pea_miles_eph_3trim_2024', models.FloatField(blank=True, null=True)),
                ('pea_miles_censo_2022', models.FloatField(blank=True, null=True)),
                ('becario_id', models.IntegerField(blank=True, null=True)),
                ('docente', models.IntegerField(blank=True, null=True)),
                ('investigador', models.IntegerField(blank=True, null=True)),
                ('otro_personal', models.IntegerField(blank=True, help_text='Otro personal de la institución de CyT', null=True)),
                ('tasa_inv_millon_hab', models.FloatField(blank=True, help_text='Tasa de investigadores por cada millón de habitantes', null=True)),
                ('tasa_inv_1000_pea', models.FloatField(blank=True, help_text='Tasa de investigadores por cada mil personas de la PEA', null=True)),
            ],
            options={
                'verbose_name': 'Indicador de Contexto y SICYTAR',
                'verbose_name_plural': 'Indicadores de Contexto y SICYTAR',
                'db_table': 'indicadores_contexto_y_sicytar',
            },
        ),
        migrations.CreateModel(
            name='InversionArticulosPorInvestigador',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('anio', models.IntegerField()),
                ('nivel_agregacion', models.CharField(max_length=50)),
                ('unidad_territorial', models.CharField(max_length=100)),
                ('monto_inversion', models.DecimalField(decimal_places=2, max_digits=20)),
                ('cant_investigadores', models.IntegerField()),
                ('cant_articulos', models.IntegerField()),
                ('inversion_investigador', models.DecimalField(decimal_places=2, max_digits=20)),
                ('articulos_investigador', models.FloatField()),
            ],
            options={
                'verbose_name': 'Ratio Inversión-Artículo por Investigador',
                'verbose_name_plural': 'Ratios Inversión-Artículo por Investigador',
                'db_table': 'inversion_y_articulos_por_investigador_provincia_region_pais',
            },
        ),
        migrations.CreateModel(
            name='InversionEmpresariaSector',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('anio', models.IntegerField()),
                ('nivel_agregacion', models.CharField(max_length=50)),
                ('unidad_territorial', models.CharField(max_length=100)),
                ('sector_clae', models.CharField(max_length=255)),
                ('monto_inversion', models.DecimalField(decimal_places=2, max_digits=20)),
                ('monto_inversion_constante_2004', models.DecimalField(decimal_places=2, max_digits=20)),
            ],
            options={
                'verbose_name': 'Inversión Empresaria por Sector',
                'verbose_name_plural': 'Inversiones Empresarias por Sector',
                'db_table': 'esid_inversion_sectores_provincia_region_pais',
            },
        ),
        migrations.CreateModel(
            name='InversionID',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('anio', models.IntegerField(help_text='Año al que corresponde el dato de inversión')),
                ('nivel_agregacion', models.CharField(help_text='Nivel geográfico (País, Región, Provincia)', max_length=50)),
                ('unidad_territorial', models.CharField(help_text='Nombre de la locación geográfica', max_length=100)),
                ('tipo_institucion_ract', models.CharField(blank=True, help_text='Tipo de institución que realiza la inversión', max_length=100, null=True)),
                ('monto_inversion', models.DecimalField(decimal_places=2, help_text='Monto en pesos corrientes', max_digits=20)),
                ('monto_inversion_constante_2004', models.DecimalField(decimal_places=2, help_text='Monto en pesos constantes de 2004', max_digits=20)),
            ],
            options={
                'verbose_name': 'Inversión en I+D',
                'verbose_name_plural': 'Inversiones en I+D',
                'db_table': 'inversion_id_ract_esid_provincia_region_pais',
            },
        ),
        migrations.CreateModel(
            name='Patente',
            fields=[
                ('lens_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('application_number', models.CharField(max_length=255)),
                ('anio', models.IntegerField()),
                ('provincia', models.CharField(max_length=100)),
                ('region_cofecyt', models.CharField(blank=True, max_length=100, null=True)),
                ('renaorg_id', models.CharField(blank=True, max_length=50, null=True)),
                ('institucion', models.CharField(blank=True, max_length=255, null=True)),
                ('es_institucion_nacional', models.CharField(blank=True, max_length=10, null=True)),
                ('letra_ipc_descripcion', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Patente Desagregada',
                'verbose_name_plural': 'Patentes Desagregadas',
                'db_table': 'patentes_desagregadas_ipc_provincia_region_pais',
            },
        ),
        migrations.CreateModel(
            name='PercepcionSocial',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('anio', models.IntegerField()),
                ('indicador', models.CharField(max_length=255)),
                ('variable', models.CharField(max_length=255)),
                ('nivel_agregacion', models.CharField(max_length=50)),
                ('unidad_territorial', models.CharField(max_length=100)),
                ('valor', models.FloatField(help_text='Generalmente un porcentaje')),
            ],
            options={
                'verbose_name': 'Encuesta de Percepción Social',
                'verbose_name_plural': 'Encuestas de Percepción Social',
                'db_table': 'percepcion_final',
            },
        ),
        migrations.CreateModel(
            name='ProductoCientifico',
            fields=[
                ('producto_id', models.IntegerField(primary_key=True, serialize=False)),
                ('anio_publica', models.IntegerField(blank=True, null=True)),
                ('unidad_territorial', models.CharField(max_length=100)),
                ('tipo_producto_cientifico', models.CharField(blank=True, max_length=255, null=True)),
                ('revista_sjr', models.CharField(blank=True, max_length=255, null=True)),
                ('gran_area', models.CharField(blank=True, max_length=100, null=True)),
                ('nivel_agregacion', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Producto Científico',
                'verbose_name_plural': 'Productos Científicos',
                'db_table': 'productos_provincia_region_pais_renaprod',
            },
        ),
        migrations.CreateModel(
            name='Provincia',
            fields=[
                ('provincia_id', models.IntegerField(help_text='Identificador numérico único', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='provincia', help_text='Nombre oficial completo de la provincia', max_length=100)),
                ('codigo_indec', models.CharField(blank=True, help_text='Código oficial según INDEC', max_length=10, null=True)),
                ('region_mincyt', models.CharField(blank=True, help_text='Región según MINCyT', max_length=100, null=True)),
                ('region_iso', models.CharField(blank=True, help_text='Código de provincia según ISO 3166-2:AR', max_length=10, null=True)),
                ('region_cofecyt', models.CharField(blank=True, help_text='Región según COFECYT', max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Provincia',
                'verbose_name_plural': 'Provincias',
                'db_table': 'ref_provincia',
            },
        ),
        migrations.CreateModel(
            name='Proyecto',
            fields=[
                ('proyecto_id', models.IntegerField(primary_key=True, serialize=False)),
                ('nivel_agregacion', models.CharField(max_length=50)),
                ('unidad_territorial', models.CharField(max_length=100)),
                ('anio_inicio', models.IntegerField()),
                ('institucion_financiadora', models.CharField(blank=True, max_length=255, null=True)),
                ('tmp_fondo_anpcyt', models.CharField(blank=True, max_length=100, null=True)),
                ('tipo_proyecto_cyt', models.CharField(blank=True, max_length=100, null=True)),
                ('gran_area', models.CharField(blank=True, max_length=100, null=True)),
                ('tipo_organizacion_ejecutora', models.CharField(blank=True, max_length=100, null=True)),
                ('monto_financiado_adjudicado_prorrateado', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('monto_total_adjudicado_prorrateado', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('monto_financiado_adjudicado_constante_2004_prorrateado', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('monto_total_adjudicado_constante_2004_prorrateado', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
            ],
            options={
                'verbose_name': 'Proyecto',
                'verbose_name_plural': 'Proyectos',
                'db_table': 'proyectos_provincia_region_pais_renaprod',
            },
        ),
        migrations.CreateModel(
            name='ProyectoPFI',
            fields=[
                ('id_pfi', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('anio', models.IntegerField()),
                ('cupo', models.CharField(max_length=50)),
                ('region', models.CharField(max_length=100)),
                ('provincia', models.CharField(max_length=100)),
                ('tema', models.CharField(max_length=255)),
                ('sector', models.CharField(max_length=255)),
                ('vertical', models.CharField(max_length=255)),
                ('tecnologias', models.TextField()),
                ('vertical_tecnologia', models.TextField()),
            ],
            options={
                'verbose_name': 'Proyecto Federal de Innovación (PFI)',
                'verbose_name_plural': 'Proyectos Federales de Innovación (PFI)',
                'db_table': 'proyectos_pfi',
            },
        ),
        migrations.CreateModel(
            name='RRHHsicytar',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('anio', models.IntegerField()),
                ('nivel_agregacion', models.CharField(max_length=50)),
                ('unidad_territorial', models.CharField(max_length=100)),
                ('tipo_personal_sicytar', models.CharField(max_length=100)),
                ('es_conicet', models.CharField(max_length=10)),
                ('sexo_descripcion', models.CharField(max_length=50)),
                ('gran_area_experticia', models.CharField(max_length=100)),
                ('cant_personas', models.IntegerField()),
            ],
            options={
                'verbose_name': 'RRHH SICYTAR Agregado',
                'verbose_name_plural': 'RRHH SICYTAR Agregados',
                'db_table': 'rrhh_sicytar_agregado_provincia_region_pais',
            },
        ),
        migrations.CreateModel(
            name='UnidadID',
            fields=[
                ('organizacion_id', models.IntegerField(primary_key=True, serialize=False)),
                ('organizacion', models.CharField(max_length=255)),
                ('nivel_1', models.CharField(help_text='Institución principal de la cual depende', max_length=255)),
                ('provincia', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Unidad de I+D',
                'verbose_name_plural': 'Unidades de I+D',
                'db_table': 'listado_unidades_de_id',
            },
        ),
        migrations.CreateModel(
            name='RRHHract',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('anio_id', models.IntegerField()),
                ('tipo_institucion_ract', models.CharField(max_length=100)),
                ('tipo_personal', models.CharField(max_length=100)),
                ('tipo_jornada', models.CharField(max_length=50)),
                ('valor', models.FloatField(help_text='Cantidad de personas, puede ser EAF')),
                ('provincia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datos_fuente.provincia')),
            ],
            options={
                'verbose_name': 'RRHH RACT/ESID',
                'verbose_name_plural': 'RRHH RACT/ESID',
                'db_table': 'rrhh_ract_esid',
            },
        ),
    ]
