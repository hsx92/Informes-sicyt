# Generated by Django 5.2.3 on 2025-06-11 13:59

from django.db import migrations


def cargar_definicion_panorama_provincial(apps, schema_editor):
    """
    Puebla la BD con la definición del informe "Panorama Provincial"
    utilizando el nuevo esquema refinado con campos de configuración JSON.
    """
    Informe = apps.get_model('ref', 'Informe')
    Componente = apps.get_model('ref', 'Componente')
    InformeComposicion = apps.get_model('ref', 'InformeComposicion')

    # Limpiamos definiciones previas para que el script sea repetible
    Informe.objects.all().delete()
    Componente.objects.all().delete()

    # 1. Definimos los componentes con su configuración completa
    kpi_poblacion = Componente.objects.create(
        nombre="KPI Población",
        tipo_componente="KPI",
        estado='ACTIVO',
        parametros_requeridos={"params": ["provincia_id"]},
        config_visualizacion={"format": "int", "suffix": " hab."},
        plantilla_sql="SELECT poblacion_censo_2022 FROM indicadores_contexto_y_sicytar WHERE provincia_id = {{ provincia_id }};"
    )
    
    kpi_investigadores = Componente.objects.create(
        nombre="KPI Cantidad de Investigadores",
        tipo_componente="KPI",
        estado='ACTIVO',
        parametros_requeridos={"params": ["provincia_id"]},
        config_visualizacion={"format": "int", "suffix": " investigadores"},
        plantilla_sql="SELECT \"INVESTIGADOR\" FROM indicadores_contexto_y_sicytar WHERE provincia_id = {{ provincia_id }};"
    )
    
    kpi_tasa_investigadores = Componente.objects.create(
        nombre="KPI Tasa Investigadores por millón de hab.",
        tipo_componente="KPI",
        estado='ACTIVO',
        parametros_requeridos={"params": ["provincia_id"]},
        config_visualizacion={"format": "float", "suffix": " por millón hab."},
        plantilla_sql="SELECT tasa_inv_millon_hab FROM indicadores_contexto_y_sicytar WHERE provincia_id = {{ provincia_id }};"
    )

    comp_grafico_inversion = Componente.objects.create(
        nombre="Gráfico Comparativo de Inversión en I+D - Provincia vs Región y País",
        descripcion="Gráfico que muestra la evolución de la inversión en I+D de una provincia, comparándola con su región y el país.",
        version=1,
        tipo_componente="GRAFICO.line",
        estado='ACTIVO',
        parametros_requeridos={"params": ["provincia_id"]},
        config_visualizacion={
            "layout": {
                "title": {"text": "Evolución de la Inversión en I+D"},
                "xaxis": {"title": {"text": "Año"}},
                "yaxis": {"title": {"text": "Monto (en Pesos Constantes 2004)"}}
            }
        },
        plantilla_sql="""
            SELECT anio_id, unidad_territorial, SUM(monto_inversion_constante_2004) as inversion_constante
            FROM inversion_id_ract_esid_provincia_region_pais
            WHERE unidad_territorial IN (
                (SELECT provincia FROM ref_provincia WHERE provincia_id = {{ provincia_id }}),
                (SELECT region_cofecyt FROM ref_provincia WHERE provincia_id = {{ provincia_id }}),
                'País'
            )
            GROUP BY anio_id, unidad_territorial ORDER BY anio_id, unidad_territorial;
        """
    )

    # 2. Creamos la definición del informe "Panorama Provincial"
    informe_panorama = Informe.objects.create(
        nombre="Panorama Provincial",
        descripcion="Informe automático que presenta una visión general de los principales indicadores de CyT de una provincia.",
        estado='ACTIVO',
        version=1
    )

    # 3. Componemos el informe, usando config_override para personalizar el gráfico
    InformeComposicion.objects.create(informe=informe_panorama, componente=kpi_poblacion, orden=10)
    InformeComposicion.objects.create(informe=informe_panorama, componente=kpi_investigadores, orden=20)
    InformeComposicion.objects.create(informe=informe_panorama, componente=kpi_tasa_investigadores, orden=30)
    InformeComposicion.objects.create(
        informe=informe_panorama,
        componente=comp_grafico_inversion,
        orden=40,
        config_override={
            "title": "Inversión en I+D: {{ provincia_nombre }} vs. Región y País"
        }
    )


class Migration(migrations.Migration):

    dependencies = [
        ('ref', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(cargar_definicion_panorama_provincial),
    ]
